<< 프로젝트 >>
    서버 : 스프링부트 많이 사용
        => 작성 : 컨트롤러 -> 서비스 -> 리파지토리
        + DTO, Entity
        
    화면단 : 프로젝트마다 다름
        1) jsp == thymeleaf 와 유사
            => 스프링부트에서는 jsp 는 기본 템플릿이 아님 => 설정 작업 필요
            => 주로 예전 레거시 프로젝트 들이 jsp 임
        2) 템플릿
            => thymeleaf 등...
        3) react

< 라이브러리 작업>
    1. spring Web
    2. orcle driver
    3. data jpa
    4. thymeleaf
    5. devtools
    6. lombok
    7. validation
    + 8. security

< 기본 작업 >
1. application.properties 수정
2. modelMapper 라이브러리 추가
3. thymeleaf layout dialect 추가
4. modelmapper 사용을 위한 config 파일 작성
5. BaseEntity 작성
6. main 클래스 위에 @EnableJpaAuditing 추가
7. querydsl 설정
8. 

--------------------------------------------------
ToDo 프로젝트

    1) 계획
        1. todo 작성
        2. todo 완료여부
        3. 전체 todo 목록 보기
            => 완료 안한 목록
        4. todo 삭제
        5. 완료한 todo 목록

    2) 구상
        - ToDo 테이블 (entity)
            - 컬럼
                1. pk
                2. 내용
                3. 작성일자
                4. 수정일자
                5. 완료여부(true, false)
                6. 중요도(true, false)

--------------------------------------------------
Book 프로젝트

    1) 계획
        - 도서관리
            1. 도서 정보 입력
            2. 도서 정보 수정
            3. 도서 정보 삭제
            4. 도서 목록 조회
                4-1. 전체 조회
                4-1. 개별 조회
    
    2) 구상
        - Book 테이블 (entity)
            - 컬럼
                1. 도서 고유 번호 : code = Long / pk
                2. 제목 : title
                3. 저자 : author
                4. 가격 : price

--------------------------------------------------
board 프로젝트

    1) 계획
        - 게시판
            1. 게시물 : title [댓글개수]

    2) 구상
        - board 테이블 (entity) = 이름 : Boardtbl
            1. bno(pk)
            2. title
            3. content
        
        - Member 테이블 (entity) = 이름 : Board_Member
            1. email(pk)
            2. password
            3. name

        - Reply (entity)
            1. rno(pk)
            2. text
            3. replyer

    3) 관계 맺기
        1. 한명의 멤버(1)는 여러개의 게시글(N) 작성
        2. 하나의 게시글(1)에는 여러개의 댓글(N) 작성
